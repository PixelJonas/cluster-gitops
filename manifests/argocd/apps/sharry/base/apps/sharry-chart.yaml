apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "111"
  name: sharry
  namespace: argocd-operator-system
spec:
  destination:
    namespace: sharry
    server: "https://kubernetes.default.svc"
  source:
    chart: app-template
    repoURL: https://bjw-s.github.io/helm-charts
    targetRevision: 0.2.2
    helm:
      values: |-


        image:
          repository: eikek0/sharry
          tag: v1.11.0
          pullPolicy: IfNotPresent

        env:
          - name: TZ
            value: Europe/Berlin
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sharry-db-postgresql
                key: postgres-password
          - name: SHARRY_OAUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: sharry-credentials
                key: client-secret
          - name: SHARRY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sharry-credentials
                key: admin-password
          - name: SHARRY_INVITE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sharry-credentials
                key: invite-password
          - name: SHARRY_SMTP_USERNAME
            valueFrom:
              secretKeyRef:
                name: sharry-credentials
                key: smtp-username
          - name: SHARRY_SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sharry-credentials
                key: smtp-password

        dnsConfig:
          nameservers:
            - 192.168.1.207
          searches:
            - janz.lan
          
        dnsPolicy: None

        configmap: 
          config:
            enabled: true
            data: 
              sharry.conf: |
                sharry.restserver {
                  base-url = "https://share.janz.digital"
                  bind {
                    address = "0.0.0.0"
                    port = {{ .Values.service.main.ports.http.port }}
                  }
                  mail {
                    enabled = true
                    smtp {
                      host = "smtp.strato.de"
                      port = 465
                      user = ${SHARRY_SMTP_USERNAME}
                      password = ${SHARRY_SMTP_PASSWORD}
                      ssl-type = "ssl"
                    }
                  }
                  webapp {
                    app-name = "Janz Share"
                    default-language = "de"
                    initial-theme = "dark"
                  }
                  backend {
                    jdbc {
                      url = "jdbc:postgresql://sharry-db-postgresql:5432/sharry"
                      user = "postgres"
                      password = ${POSTGRESQL_PASSWORD}
                    }
                    signup {
                      mode = "invite"
                      invite-password = ${SHARRY_INVITE_PASSWORD}
                      invite-time = "7 days"
                    }
                    auth {
                      oauth = [
                        {
                          enabled = true
                          id = "janz"
                          name = "Janz SSO"
                          icon = "fab fa-key"
                          authorize-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/auth"
                          token-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/token"
                          user-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/userinfo"
                          user-id-key = "preferred_username"
                          client-id = "sharry"
                          client-secret = ${SHARRY_OAUTH_CLIENT_SECRET}
                        }
                      ]
                      fixed {
                        enabled = true
                        user = "admin"
                        password = ${SHARRY_ADMIN_PASSWORD}
                        order = 10
                      }
                    }
                  }
                }

        args:
        - "/opt/config/sharry.conf"

        persistence:
          config:
            name: sharry-config
            enabled: true
            type: configMap
            mountPath: /opt/config

        controller:
          labels:
            kanister.kasten.io/inject-sidecar: "true"
            k10.kasten.io/forcegenericbackup: "true"

        podLabels:
          kanister.kasten.io/inject-sidecar: "true"
          k10.kasten.io/forcegenericbackup: "true"

        service:
          main:
            ports:
              http:
                port: 9090

  project: cluster-apps
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
