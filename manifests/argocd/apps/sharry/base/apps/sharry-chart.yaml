apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "111"
  name: sharry
  namespace: argocd-operator-system
spec:
  destination:
    namespace: sharry
    server: "https://kubernetes.default.svc"
  source:
    chart: app-template
    repoURL: https://bjw-s.github.io/helm-charts
    targetRevision: 2.0.0
    helm:
      values: |-

        defaultPodOptions: 
          securityContext:
              runAsUser: 0
              runAsGroup: 0        
          dnsConfig:
            options:
              - name: ndots
                value: "1"

        controllers:
          main:
            containers:
              main:
                image:
                  repository: eikek0/sharry
                  # renovate: datasource=docker depName=docker.io/eikek0/sharry
                  tag: v1.12.1
                  pullPolicy: IfNotPresent
                args:
                  - "/opt/config/sharry.conf"
                env:
                  - name: TZ
                    value: Europe/Berlin
                  - name: POSTGRESQL_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: sharry-db-postgresql
                        key: postgres-password
                  - name: SHARRY_OAUTH_CLIENT_SECRET
                    valueFrom:
                      secretKeyRef:
                        name: sharry-credentials
                        key: client-secret
                  - name: SHARRY_ADMIN_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: sharry-credentials
                        key: admin-password
                  - name: SHARRY_INVITE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: sharry-credentials
                        key: invite-password
                  - name: SHARRY_SMTP_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: sharry-credentials
                        key: smtp-username
                  - name: SHARRY_SMTP_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: sharry-credentials
                        key: smtp-password

        configMaps: 
          config:
            enabled: true
            data: 
              sharry.conf: |
                sharry.restserver {
                  base-url = "https://share.janz.digital"
                  bind {
                    address = "0.0.0.0"
                    port = {{ .Values.service.main.ports.http.port }}
                  }
                  logging {
                    format: "Fancy"
                    minimum-level = "Debug"
                  }
                  mail {
                    enabled = true
                    smtp {
                      host = "smtp.fastmail.com"
                      port = 465
                      user = ${SHARRY_SMTP_USERNAME}
                      password = ${SHARRY_SMTP_PASSWORD}
                      ssl-type = "ssl"
                    }
                  }
                  webapp {
                    app-name = "Janz Share"
                    default-language = "de"
                    initial-theme = "dark"
                  }
                  backend {
                    jdbc {
                      url = "jdbc:postgresql://sharry-db-postgresql:5432/sharry"
                      user = "postgres"
                      password = ${POSTGRESQL_PASSWORD}
                    }
                    signup {
                      mode = "invite"
                      invite-password = ${SHARRY_INVITE_PASSWORD}
                      invite-time = "7 days"
                    }
                    auth {
                      oauth = [
                        {
                          enabled = true
                          id = "janz"
                          name = "Janz SSO"
                          icon = "fab fa-key"
                          authorize-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/auth"
                          token-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/token"
                          user-url = "https://sso.janz.digital/auth/realms/janz/protocol/openid-connect/userinfo"
                          user-id-key = "preferred_username"
                          client-id = "sharry"
                          client-secret = ${SHARRY_OAUTH_CLIENT_SECRET}
                        }
                      ]
                      fixed {
                        enabled = true
                        user = "admin"
                        password = ${SHARRY_ADMIN_PASSWORD}
                        order = 10
                      }
                    }
                  }
                }

        persistence:
          config:
            name: sharry-config
            enabled: true
            type: configMap
            globalMounts:
              - path: /opt/config

        service:
          main:
            ports:
              http:
                port: 9090

        ingress:
          main:
            enabled: true
            className: openshift-default
            annotations:
              route.openshift.io/termination: "edge"
            pathType: Prefix
            hosts:
              - host: sharry.apps.sno-cluster.janz.digital
                paths:
                  - path: /
                    service:
                      name: main
                      port: http
                    pathType: Prefix

  project: cluster-apps
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
