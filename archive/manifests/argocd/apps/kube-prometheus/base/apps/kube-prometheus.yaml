apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd-operator-system
  annotations:
    argocd.argoproj.io/sync-wave: "31"
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: cluster-config
  source:
    repoURL: "https://prometheus-community.github.io/helm-charts"
    targetRevision: 45.27.1
    helm:
      skipCrds: true
      values: |

        fullnameOverride: monitoring

        kubeControllerManager:
          service:
            selector:
              k8s-app: kube-controller-manager

        kubeScheduler:
          service:
            selector:
              k8s-app: kube-scheduler

        altermanager:
          alertmanagerSpec:
            secrets:
              - slack-config
            alertmanagerConfiguration:
              name: janz-config
            storage:
              volumeClaimTemplate:
                metadata:
                  name: alert-db
                spec:
                  storageClassName: openebs-jiva-csi-default
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 5Gi
        prometheus:              
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                metadata:
                  name: prometheus-db
                spec:
                  storageClassName: openebs-jiva-csi-default
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi

        grafana:
          persistence:
            enabled: true
            type: pvc
            size: 10Gi
            storageClassName: openebs-jiva-csi-default
          grafana.ini:
            server:
              root_url: https://grafana.apps.titan.janz.digital/

            auth:
              disable_login_form: false
              oauth_auto_login: false

            "auth.generic_oauth":
              enabled: true
              scopes: openid email profile
              name: Oauth
              tls_skip_verify_insecure: false
              allow_sign_up: true
              client_id: $__file{/etc/secrets/keycloak-conf/client_id}
              client_secret: $__file{/etc/secrets/keycloak-conf/client_secret}
              auth_url: $__file{/etc/secrets/keycloak-conf/auth_url}
              token_url: $__file{/etc/secrets/keycloak-conf/token_url}
              api_url: $__file{/etc/secrets/keycloak-conf/api_url}
          
          extraSecretMounts:
            - name: keycloak-conf-mount
              secretName: keycloak-conf
              defaultMode: 0440
              mountPath: /etc/secrets/keycloak-conf
              readOnly: true

    chart: kube-prometheus-stack
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
